[build-system]
requires = ["setuptools>=65.0.0", "wheel"]
build-backend = "setuptools.build_meta"

# Project settings -----------------------------------------------------------------------------------------------------
[project]
name = "phenocv"
dynamic = ["version"]
description = "Rice High Throughput Phenotyping Computer Vision Toolkit"
readme = "README.md"
requires-python = ">=3.8"
license = { "text" = "AGPL-3.0" }
keywords = ["machine-learning", "deep-learning", "computer-vision", "ML",
    "DL", "AI", "YOLO" ]
authors = [
    { name = "RuLei Chen", email = 'chenrulei@cemps.ac.cn' }
]
maintainers = [
    { name = "RuLei Chen", email = 'chenrulei@cemps.ac.cn'}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
]

# Required dependencies ------------------------------------------------------------------------------------------------
dependencies = [
    "albumentations",
    "catalogue",
    "confection",
    "matplotlib",
    "numpy",
    "opencv_python",
    "pandas",
    "pycocotools",
    "sahi",
    "scikit_learn",
    "scipy",
    "segment_anything==1.0",
    "segment_anything_hq==0.3",
    "setuptools",
    "timm",
    "torch",
    "torchvision",
    "tqdm",
    "ultralytics>=8.1.0",
]

# Optional dependencies ------------------------------------------------------------------------------------------------
[project.optional-dependencies]
dev = [
    "ipython",
    "check-manifest",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "coverage[toml]",
    "mkdocs-material",
    "mkdocstrings[python]",
    "mkdocs-jupyter", # for notebooks
    "mkdocs-redirects", # for 301 redirects
    "mkdocs-ultralytics-plugin>=0.0.42", # for meta descriptions and test_images, dates and authors
]

label_studio = [
    "label_studio_converter==0.0.55",
    "label_studio_ml==1.0.9",
    "label_studio_tools==0.0.3",
]

# Tools settings -------------------------------------------------------------------------------------------------------
[tool.setuptools]  # configuration specific to the `setuptools` build backend.
packages = { find = { where = ["."], include = ["phenocv", "phenocv.*"]}}
package-data = { "phenocv" = ["configs/*"] }

[tool.setuptools.dynamic]
version = { attr = "phenocv.__version__" }

[tool.pytest]
norecursedirs = [".git", "dist", "build"]
addopts = "--doctest-modules --durations=30 --color=yes"

[tool.coverage.run]
source = ["phenocv/"]
data_file = "tests/.coverage"

[tool.isort]
line_length = 79
multi_line_output = 0

[tool.yapf]
based_on_style = "pep8"
spaces_before_comment = 2
column_limit = 79
coalesce_brackets = true
blank_line_before_nested_class_or_def = true
spaces_around_power_operator = true
space_between_ending_comma_and_closing_bracket = true
split_before_closing_bracket = false
split_before_expression_after_opening_paren = true
split_before_first_argument = false

[tool.ruff]
line-length = 79

[tool.docformatter]
wrap-summaries = 79
wrap-descriptions = 79
in-place = true
pre-summary-newline = true
close-quotes-on-newline = true

[tool.codespell]
ignore-words-list = "crate,nd,ned,strack,dota,ane,segway,fo,gool,winn,commend,bloc,nam,afterall"
skip = '*.pt,*.pth,*.torchscript,*.onnx,*.tflite,*.pb,*.bin,*.param,*.mlmodel,*.engine,*.npy,*.data*,*.csv,*pnnx*,*venv*,*translat*,__pycache__*,*.ico,*.jpg,*.png,*.mp4,*.mov,/runs,/.git,./docs/??/*.md,./docs/mkdocs_??.yml'
